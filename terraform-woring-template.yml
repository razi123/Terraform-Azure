# Old Template CICD working usinf environemtn variables 

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  - script: |
      terraform init -update
      terraform validate
    displayName: 'Terraform Init and Validate'
    workingDirectory: $(System.DefaultWorkingDirectory)/terra_config/

  - script: |
      export ARM_CLIENT_ID=$(AzureServicePrincipleId)
      export ARM_CLIENT_SECRET=$(AzureServicePrincipleKey)
      export ARM_SUBSCRIPTION_ID=$(AzureSubscriptionId)
      export ARM_TENANT_ID=$(AzureTenantId)

      # deploy terraform
      terraform apply -auto-approve
    displayName: 'Authenticate to Azure'
    env:
      AzureServicePrincipleId: $(ARM_CLIENT_ID)
      AzureServicePrincipleKey: $(ARM_CLIENT_SECRET)
      AzureSubscriptionId: $(ARM_SUBSCRIPTION_ID)
      AzureTenantId: $(ARM_TENANT_ID)
    workingDirectory: $(System.DefaultWorkingDirectory)/terra_config/

  

  # second template working with service xredentials

  trigger:
  - master
  
pool:
    vmImage: ubuntu-latest

stages:
- stage: build_test
  jobs:
  - job: build_job
    steps:       
      - script: |
          sudo apt-get update
          pip install --upgrade databricks-cli
         # sudo apt-get install software-properties-common
         # sudo apt-get install python3.9
         # sudo apt install python3-pip 
         # pip install checkov
        displayName: 'Requirements'
        workingDirectory: $(System.DefaultWorkingDirectory)

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: "service-connect-vault-access"
          KeyVaultName: 'kv-razi'
          SecretsFilter: 'client-id, client-secret, tenant-id'
        displayName: 'Azure Key Vault Secrets'

      - script: |
          az login --service-principal -u $(client-id) -p $(client-secret) --tenant $(tenant-id)
        displayName: 'Azure authenticate'
        workingDirectory: $(System.DefaultWorkingDirectory)/
     
      - script: |
          export TF_VAR_ARM_CLIENT_ID=$client-id
          export TF_VAR_ARM_CLIENT_SECRET=$client-secret
          export TF_VAR_ARM_TENANT_ID=$tenant-id 

          terraform init -upgrade
          terraform fmt
          terraform validate
          terraform plan -out=tfplan
        displayName: 'Export Terraform Validate'
        workingDirectory: $(System.DefaultWorkingDirectory)/

      - script: |
          terraform apply -auto-approve tfplan
          #terraform apply -auto-approve

        displayName: 'Terraform run'
        workingDirectory: $(System.DefaultWorkingDirectory)/
