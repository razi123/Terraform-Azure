trigger:
  - master
  
pool:
    vmImage: ubuntu-latest

stages:
- stage: build_test
  jobs:
  - job: build_job
    steps:       
      - script: |
          sudo apt-get update
         # sudo apt-get install software-properties-common
         # sudo apt-get install python3.9
         # sudo apt install python3-pip 
         # pip install checkov
        displayName: 'Requirements'
        workingDirectory: $(System.DefaultWorkingDirectory)

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: "service-connect-vault-access"
          KeyVaultName: 'kv-razi'
          SecretsFilter: 'client-id, client-secret, tenant-id'
        displayName: 'Azure Key Vault Secrets'

      - script: |
          az login --service-principal -u $(client-id) -p $(client-secret) --tenant $(tenant-id)
        displayName: 'Azure authenticate'
        workingDirectory: $(System.DefaultWorkingDirectory)/
     
      - script: |
          export TF_VAR_DATABRICKS_AZURE_CLIENT_ID=$(client-id)
          export TF_VAR_DATABRICKS_AZURE_CLIENT_SECRET=$(client-secret)
          export TF_VAR_DATABRICKS_AZURE_TENANT_ID=$(tenant-id) 
        displayName: 'Azure export'
        workingDirectory: $(System.DefaultWorkingDirectory)/
       
      - script: |
          terraform init -upgrade
          terraform fmt
          terraform validate
          terraform plan -out=tfplan
        displayName: 'Terraform Validate'
        workingDirectory: $(System.DefaultWorkingDirectory)/
      
      - script: |
          curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
          https://login.microsoftonline.com/$(tenant-id)/oauth2/v2.0/token \
          -d 'client_id=$(client-id) \
          -d 'grant_type=client_credentials' \
          -d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
          -d 'client_secret=$(client-secret)'
        displayName: 'Databricks_ validate'
        workingDirectory: $(System.DefaultWorkingDirectory)

      - script: |
          $accessToken = $(az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d --query "accessToken" --output tsv)
          echo "##vso[task.setvariable variable=TF_VAR_DATABRICKS_TOKEN;issecret=true]$accessToken"
          terraform apply -auto-approve
        displayName: 'Terraform run'
        workingDirectory: $(System.DefaultWorkingDirectory)/
        env:
          TF_VAR_DATABRICKS_AZURE_CLIENT_ID: $(client-id)
          TF_VAR_DATABRICKS_AZURE_CLIENT_SECRET: $(client-secret)
          TF_VAR_DATABRICKS_AZURE_TENANT_ID: $(tenant-id)