trigger:
  - master
  
pool:
    vmImage: ubuntu-latest

stages:
- stage: build_test
  jobs:
  - job: build_job
    steps:       
      - script: |
          sudo apt-get update
          pip install --upgrade databricks-cli
         # sudo apt-get install software-properties-common
         # sudo apt-get install python3.9
         # sudo apt install python3-pip 
         # pip install checkov
        displayName: 'Requirements'
        workingDirectory: $(System.DefaultWorkingDirectory)

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: "service-connect-vault-access"
          KeyVaultName: 'kv-razi'
          SecretsFilter: 'client-id, client-secret, tenant-id'
        displayName: 'Azure Key Vault Secrets'

      - script: |
          az login --service-principal -u $(client-id) -p $(client-secret) --tenant $(tenant-id)
        displayName: 'Azure authenticate'
        workingDirectory: $(System.DefaultWorkingDirectory)/
     
      - script: |
          export ARM_CLIENT_ID=$(client-id)
          export ARM_CLIENT_SECRET=$(client-secret)
          export ARM_TENANT_ID=$(tenant-id) 
        displayName: 'Azure export'
        workingDirectory: $(System.DefaultWorkingDirectory)/
       
      - script: |
          terraform init -upgrade
          terraform fmt
          terraform validate
          terraform plan -out=tfplan
        displayName: 'Terraform Validate'
        workingDirectory: $(System.DefaultWorkingDirectory)/
      
      # - script: |
      #     #databricks configure --token
      #     #databricks_token=$(databricks tokens create --comment "CI/CD Token" --lifetime-seconds 3600)
      #     echo $databricks_token
      #     export DATABRICKS_TOKEN=$databricks_token
      #   displayName: 'Databricks Validate'
      #   workingDirectory: $(System.DefaultWorkingDirectory)

      - script: |
          #terraform apply tfplan -auto-approve
          terraform apply -auto-approve
          if [ $TF_APPLY_EXIT_CODE -ne 0 ]; then
            terrafrom destroy tfplan
          fi

        displayName: 'Terraform run'
        workingDirectory: $(System.DefaultWorkingDirectory)/
        env:
          ARM_CLIENT_ID: $(client-id)
          ARM_CLIENT_SECRET: $(client-secret)
          ARM_TENANT_ID: $(tenant-id)