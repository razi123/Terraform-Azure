trigger:
  - master
  
pool:
    vmImage: ubuntu-latest

stages:
- stage: build_test
  jobs:
  - job: build_job
    steps:       
      - script: |
          sudo apt-get update
         # sudo apt-get install software-properties-common
         # sudo apt-get install python3.9
         # sudo apt install python3-pip 
         # pip install checkov
        displayName: 'Requirements'
        workingDirectory: $(System.DefaultWorkingDirectory)

      - task: AzureKeyVault@2
        inputs:
          azureSubscription: "service-connect-vault-access"
          KeyVaultName: 'kv-razi'
          SecretsFilter: 'client-id, client-secret, tenant-id'
        displayName: 'Azure Key Vault Secrets'

      - task: CmdLine@2
        inputs:
          script: |
            echo $(client-id)
            echo $(client-secret)
            echo $(tenant-id)

            echo $(client-secret) > secret.txt
            cat secret.txt
        displayName: 'Azure Key Vault Secrets'

      - script: |
          #az login --service-principal -u $(client-id) -p $(client-secret) --tenant $(tenant-id)
          echo "##vso[task.setvariable variable=CLIENT_ID]$(client-id)"
          echo "##vso[task.setvariable variable=CLIENT_SECRET]$(client-secret)"
          echo "##vso[task.setvariable variable=TENANT_ID]$(tenant-id)"
        displayName: 'Set Environment Variables'

      - script: |
          echo "Using SECRET1: $CLIENT_ID"
          echo "Using SECRET2: $CLIENT_SECRET"
        displayName: 'Use Environment Variables'
        
      - script: |
          export $(client-id)=$(AzureServicePrincipleId)
          export $(client-secret)=$(AzureServicePrincipleKey)
          export "7ca5fc28-3bbc-47b0-960d-4dba56edc701"=$(AzureSubscriptionId)
          export $(tenant-id)=$(AzureTenantId)

      - script: |
          terraform init
        displayName: 'Terraform Init'
        workingDirectory: $(System.DefaultWorkingDirectory)/
    
      - script: |
          terraform fmt
          terraform validate
          terraform plan -out=tfplan
        displayName: 'Terraform Validate'
        workingDirectory: $(System.DefaultWorkingDirectory)/

      - script: |
          terraform apply -auto-approve
        displayName: 'Terraform Run'
        env:
           AzureServicePrincipleId: $(client-id)
           AzureServicePrincipleKey: $(client-secret)
           AzureSubscriptionId: $("7ca5fc28-3bbc-47b0-960d-4dba56edc701")
           AzureTenantId: $(tenant-id)
        workingDirectory: $(System.DefaultWorkingDirectory)/terra_config/

#- stage: 'Terrafrom_Plan'
#  jobs:
#  - job: 'Plan'
#    steps:
#    - script: |

        #terraform init
#        plan=$(System.ArtifactsDirectory)/plan-app.tfplan
#        terraform plan -input=false -out $plan
#        terraform show -no-color -json $plan  > $(System.ArtifactsDirectory)/plan-app.json
        
        # deploy terraform
#        terraform apply -auto-approve

      # env:
      #   AzureServicePrincipleId: $(ARM_CLIENT_ID)
      #   AzureServicePrincipleKey: $(ARM_CLIENT_SECRET)
      #   AzureSubscriptionId: $(ARM_SUBSCRIPTION_ID)
      #   AzureTenantId: $(ARM_TENANT_ID)
    
#     - script: |
#         cat plan-app.json
#         echo "##vso[task.setvariable variable=PLAN;isOutput=true]$(cat plan-app.json)"
#       name: plan
#       displayName: 'Convert Plan'
#       workingDirectory: "$(System.ArtifactsDirectory)"

#     - task: PublishBuildArtifacts@1
#       displayName: Publish Artifacts
#       inputs:
#         PathtoPublish: '$(System.ArtifactsDirectory)'
#         ArtifactName: 'tfplan_artifact'
#         publishLocation: 'Container'


#old2
# - stage: deploy_terraform
#   jobs:
#   - job: deploy
#     steps:
#       - script: |
#           export ARM_CLIENT_ID=$(AzureServicePrincipleId)
#           export ARM_CLIENT_SECRET=$(AzureServicePrincipleKey)
#           export ARM_SUBSCRIPTION_ID=$(AzureSubscriptionId)
#           export ARM_TENANT_ID=$(AzureTenantId)

#           # deploy terraform
#           terraform apply -auto-approve
#         displayName: 'Authenticate to Azure'
#         env:
#           AzureServicePrincipleId: $(ARM_CLIENT_ID)
#           AzureServicePrincipleKey: $(ARM_CLIENT_SECRET)
#           AzureSubscriptionId: $(ARM_SUBSCRIPTION_ID)
#           AzureTenantId: $(ARM_TENANT_ID)
#         workingDirectory: $(System.DefaultWorkingDirectory)/terra_config/



      