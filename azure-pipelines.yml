trigger:
  - master
  
pool:
    vmImage: ubuntu-latest

stages:
- stage: build_test
  jobs:
  - job: build_job
    steps:       
      - script: |
          sudo apt-get update
          sudo apt-get install software-properties-common
          sudo apt-get install python3.9
          sudo apt install python3-pip 
          pip install checkov
        displayName: 'Requirements'
        workingDirectory: $(System.DefaultWorkingDirectory)

      - script: |
          terraform init
          terraform fmt
          terraform validate
        displayName: 'Terraform Validate'
        workingDirectory: $(System.DefaultWorkingDirectory)/

      - task: AzureKeyVault@1
        inputs:
          azureSubscription: "Azure subscription 1"
          KeyVaultName: 'my-secret-keys'
          SecretsFilter: '*'
        displayName: 'Azure Key Vault Secrets'
      
      - script: |
          az login
          az account set --subscription subscription_id
          az login --service-principal --username $(secrets.client-id) --password $(secrets.client-secret) --tenant $(secrets.tenant-id)
          terraform plan 
          terraform apply


    
# old1
# - stage: 'Terrafrom_Plan'
#   jobs:
#   - job: 'Plan'
#     steps:
#     - script: |
#         export ARM_CLIENT_ID=$(AzureServicePrincipleId)
#         export ARM_CLIENT_SECRET=$(AzureServicePrincipleKey)
#         export ARM_SUBSCRIPTION_ID=$(AzureSubscriptionId)
#         export ARM_TENANT_ID=$(AzureTenantId)

#         az account set --subscription $VAR_SUBSCRIPTION_ID
#         az login --service-principle -u $AzureServicePrincipleId -p $AzureServicePrincipleKey --tenant $AzureTenantId

#         terraform init
#         plan=$(System.ArtifactsDirectory)/plan-app.tfplan
#         terraform plan -input=false -out $plan
#         terraform show -no-color -json $plan  > $(System.ArtifactsDirectory)/plan-app.json        
#       env:
#         AzureServicePrincipleId: $(ARM_CLIENT_ID)
#         AzureServicePrincipleKey: $(ARM_CLIENT_SECRET)
#         AzureSubscriptionId: $(ARM_SUBSCRIPTION_ID)
#         AzureTenantId: $(ARM_TENANT_ID)
    
#     - script: |
#         cat plan-app.json
#         echo "##vso[task.setvariable variable=PLAN;isOutput=true]$(cat plan-app.json)"
#       name: plan
#       displayName: 'Convert Plan'
#       workingDirectory: "$(System.ArtifactsDirectory)"

#     - task: PublishBuildArtifacts@1
#       displayName: Publish Artifacts
#       inputs:
#         PathtoPublish: '$(System.ArtifactsDirectory)'
#         ArtifactName: 'tfplan_artifact'
#         publishLocation: 'Container'


#old2
# - stage: deploy_terraform
#   jobs:
#   - job: deploy
#     steps:
#       - script: |
#           export ARM_CLIENT_ID=$(AzureServicePrincipleId)
#           export ARM_CLIENT_SECRET=$(AzureServicePrincipleKey)
#           export ARM_SUBSCRIPTION_ID=$(AzureSubscriptionId)
#           export ARM_TENANT_ID=$(AzureTenantId)

#           # deploy terraform
#           terraform apply -auto-approve
#         displayName: 'Authenticate to Azure'
#         env:
#           AzureServicePrincipleId: $(ARM_CLIENT_ID)
#           AzureServicePrincipleKey: $(ARM_CLIENT_SECRET)
#           AzureSubscriptionId: $(ARM_SUBSCRIPTION_ID)
#           AzureTenantId: $(ARM_TENANT_ID)
#         workingDirectory: $(System.DefaultWorkingDirectory)/terra_config/



      